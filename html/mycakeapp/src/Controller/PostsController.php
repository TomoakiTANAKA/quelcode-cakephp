<?php
/**
 * CakePHP(tm) : Rapid Development Framework (https://cakephp.org)
 * Copyright (c) Cake Software Foundation, Inc. (https://cakefoundation.org)
 *
 * Licensed under The MIT License
 * For full copyright and license information, please see the LICENSE.txt
 * Redistributions of files must retain the above copyright notice.
 *
 * @copyright Copyright (c) Cake Software Foundation, Inc. (https://cakefoundation.org)
 * @link      https://cakephp.org CakePHP(tm) Project
 * @since     0.2.9
 * @license   https://opensource.org/licenses/mit-license.php MIT License
 */
namespace App\Controller;

use Cake\Controller\Controller;
use Cake\Event\Event;

/**
 * Application Controller
 *
 * Add your application-wide methods in the class below, your controllers
 * will inherit them.
 *
 * @link https://book.cakephp.org/3.0/en/controllers.html#the-app-controller
 */
class PostsController extends AppController
{
    public $paginate = [
        'limit' => 2,
        'order' => [
            "Posts.created" => 'desc'
        ]
    ];

    public function initialize()
    {
        parent::initialize(); // TODO: Change the autogenerated stub

        // デフォルトのlayoutを使うかどうか
//        $this->viewBuilder()->disableAutoLayout();
    }

    public function index()
    {
//        $posts = $this->Posts->find('all');
//        $posts = $this->Posts->find(); // 'all'と同じ

        // クエリビルダー
        //
//        $posts = $this->Posts->find()->where(['title' => '2番目の投稿タイトル']);
//        $posts = $this->Posts->find()->where(['title LIKE' => '%投稿タイトル%']);
//        $posts = $this->Posts->find()
//            ->where([
//                'title LIKE' => '%タイトル%',
//                'published' => true
//            ]);
//        $posts = $this->Posts->find()->where(['created >' => '2020/05/01']);
//
//        $posts = $this->Posts->find()
//            ->where(function($exp) {
//                return $exp->between('created', '2020-01-01', '2020-01-31');
//            });
//
//        $posts = $this->Posts->find()->limit(3);
//        $posts = $this->Posts->find()->order(['created' => 'desc']);

        // 動的ファインダー
//        $posts = $this->Posts->find(['published' => 'true']); // 同じ
//        $posts = $this->Posts->findByPublished(true);
//

        // ページネーション
        $posts = $this->paginate($this->Posts->find());


//        dd($posts->toArray());
        $this->set(compact('posts'));
    }

    public function view($id = null)
    {
        $post = $this->Posts->get($id);
        $title = "記事のタイトル";
//        $this->set(compact(['id', 'title'])); // <==> 同じ意味 $this->set(['id' => $id]);
        $this->set(compact('post'));


//        $this->render('/Posts/index');
//        $this->render('index'); // 同階層の場合、この書き方でOK

    }
}
